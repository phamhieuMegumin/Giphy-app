{"version":3,"sources":["Services/AuthServices.js","Context/AuthContext.js","components/NavBar/NavBar.js","Services/FavoriteService.js","components/ListGiphy/GiphyItems.js","components/Paginations/Paginations.js","components/ListGiphy/ListGiphy.js","components/Home/Home.js","components/Message/Message.js","components/Login/Login.js","components/Register/Register.js","components/Todos/FavoriteItems.js","components/Todos/Favorites.js","Admin/Admin.js","hocs/PrivateRoute.js","hocs/UnPrivateRoute.js","App.js","index.js"],"names":["login","user","a","fetch","method","body","JSON","stringify","headers","response","status","json","data","localStorage","setItem","token","message","isAuthenticated","username","role","register","logout","auth_token","getItem","console","log","AuthContext","createContext","children","useState","setUser","setIsAuthenticated","isLoader","setIsLoader","useEffect","AuthService","then","Provider","value","ShowNavBar","useContext","isOpen","setIsOpen","handleLogout","AuthServices","success","removeItem","Navbar","color","light","expand","to","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","href","style","cursor","position","right","getFavorite","msgBody","msgError","postFavorite","favorite","delete","url","GiphyItems","props","spinner","setSpinner","setMessage","history","useHistory","authContext","src","Button","FavoritesService","getData","push","Spinner","size","marginLeft","Paginations","total","changePage","itemPerPage","listPagination","i","Math","ceil","Pagination","map","number","PaginationItem","PaginationLink","ListGiphy","giphy","setGiphy","loading","setLoading","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","res","currentList","slice","item","images","original","id","Home","Message","baseClass","getStyle","Login","password","validation","setValidation","onChange","e","target","name","validationAll","msg","isEmpty","Object","keys","length","userError","passwordError","marginBottom","Form","onSubmit","preventDefault","FormGroup","Label","for","Input","type","placeholder","invalid","FormFeedback","marginTop","Register","confirmPassword","timerID","useRef","clearTimeout","ValidationAll","Validation","equals","usernameError","confirmError","userSubmit","setTimeout","TodoItems","listfavorite","render","deleteUrl","FavoritesServices","Todos","favorites","setFavorites","setRender","isRender","textAlign","FavoriteItems","_id","Admin","PrivateRoute","Component","component","roles","rest","includes","pathname","state","from","location","UnPrivateRoute","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"2MACe,G,MAAA,CACbA,MAAM,WAAD,4BAAE,WAAOC,GAAP,mBAAAC,EAAA,sEACkBC,MACrB,gDACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAPjB,UAYmB,OAXlBC,EADD,QAYQC,OAZR,iCAagBD,EAASE,OAbzB,cAaGC,EAbH,OAcHC,aAAaC,QAAQ,aAAcF,EAAKG,OAdrC,kBAeIH,GAfJ,eAiBGI,EAAU,CACdC,iBAAiB,EACjBhB,KAAM,CACJiB,SAAU,GACVC,KAAM,KArBP,kBAwBIH,GAxBJ,4CAAF,mDAAC,GA2BNI,SAAS,WAAD,4BAAE,WAAOnB,GAAP,eAAAC,EAAA,sEACeC,MACrB,mDACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAPd,cACFC,EADE,gBAWKA,EAASE,OAXd,mFAAF,mDAAC,GAaTU,OAAO,WAAD,4BAAE,4BAAAnB,EAAA,sEACiBC,MACrB,iDACA,CACEC,OAAQ,MACRI,QAAS,CACP,eAAgB,mBAChBc,WAAYT,aAAaU,QAAQ,iBAPjC,cACAd,EADA,gBAWOA,EAASE,OAXhB,mFAAF,kDAAC,GAaPM,gBAAgB,WAAD,4BAAE,4BAAAf,EAAA,sEACQC,MACrB,wDACA,CACEC,OAAQ,MACRI,QAAS,CACP,eAAgB,mBAChBc,WAAYT,aAAaU,QAAQ,iBAPxB,UAWS,OAVlBd,EADS,QAWFC,OAXE,wBAYbc,QAAQC,IAAIhB,EAASC,QAZR,SAcAD,EAASE,OAdT,yEAeD,CAAEM,iBAAiB,EAAOhB,KAAM,CAAEiB,SAAU,GAAIC,KAAM,MAfrD,4CAAF,kDAAC,KCpDLO,EAAcC,0BAEZ,cAAmB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,mBAAS,MADF,mBACxB5B,EADwB,KAClB6B,EADkB,OAEeD,oBAAS,GAFxB,mBAExBZ,EAFwB,KAEPc,EAFO,OAGCF,oBAAS,GAHV,mBAGxBG,EAHwB,KAGdC,EAHc,KAW/B,OAPAC,qBAAU,WACRC,EAAYlB,kBAAkBmB,MAAK,SAACxB,GAClCkB,EAAQlB,EAAKX,MACb8B,EAAmBnB,EAAKK,iBACxBgB,GAAY,QAEb,IAED,8BACID,EAGA,cAACN,EAAYW,SAAb,CACEC,MAAO,CAAErC,OAAM6B,UAASb,kBAAiBc,sBAD3C,SAGGH,IALH,4C,sECsEOW,MA3Ef,WAAuB,IAAD,EAC2CC,qBAC7Dd,GADMzB,EADY,EACZA,KAAM6B,EADM,EACNA,QAASb,EADH,EACGA,gBAAiBc,EADpB,EACoBA,mBADpB,EAIQF,oBAAS,GAJjB,mBAIbY,EAJa,KAILC,EAJK,KAOdC,EAAe,WACnBC,EAAavB,SAASe,MAAK,SAACxB,GACtBA,EAAKiC,UACPrB,QAAQC,IAAI,UACZZ,aAAaiC,WAAW,cACxBhB,EAAQlB,EAAKX,MACb8B,GAAmB,QA6CzB,OACE,8BACE,eAACgB,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAAnC,UACE,cAAC,IAAD,CAAMC,GAAG,aAAT,SACE,cAACC,EAAA,EAAD,qBAEF,cAACC,EAAA,EAAD,CAAeC,QA1DN,kBAAMZ,GAAWD,MA2D1B,cAACc,EAAA,EAAD,CAAUd,OAAQA,EAAQe,QAAM,EAAhC,SACE,cAACC,EAAA,EAAD,CAAKC,UAAU,UAAUF,QAAM,EAA/B,SACIvC,EAhDR,qCACE,cAAC0C,EAAA,EAAD,UACE,cAAC,IAAD,CAAMR,GAAG,aAAT,oBAEF,cAACQ,EAAA,EAAD,UACE,cAAC,IAAD,CAAMR,GAAG,uBAAT,yBAEa,UAAdlD,EAAKkB,KACJ,cAACwC,EAAA,EAAD,UACE,cAAC,IAAD,CAAMR,GAAG,mBAAT,qBAEA,KACJ,cAACQ,EAAA,EAAD,UACE,mBACEC,KAAK,MACLN,QAASX,EACTkB,MAAO,CAAEC,OAAQ,UAAWC,SAAU,WAAYC,MAAO,IAH3D,yBAaJ,qCACE,cAACL,EAAA,EAAD,UACE,cAAC,IAAD,CAAMR,GAAG,aAAT,oBAEF,cAACQ,EAAA,EAAD,UACE,cAAC,IAAD,CAAMR,GAAG,mBAAT,qBAEF,cAACQ,EAAA,EAAD,UACE,cAAC,IAAD,CAAMR,GAAG,sBAAT,qC,yBCnEK,G,MAAA,CACbc,YAAY,WAAD,4BAAE,4BAAA/D,EAAA,sEACYC,MACrB,oDACA,CACEC,OAAQ,MACRI,QAAS,CACP,eAAgB,mBAChBc,WAAYT,aAAaU,QAAQ,iBAP5B,UAWa,OAVlBd,EADK,QAWEC,OAXF,gCAYID,EAASE,OAZb,wEAcF,CACLK,QAAS,CAAEkD,QAAS,eAAgBC,UAAU,KAfvC,4CAAF,kDAAC,GAkBZC,aAAa,WAAD,4BAAE,WAAOC,GAAP,eAAAnE,EAAA,sEACWC,MACrB,mDACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU8D,GACrB7D,QAAS,CACP,eAAgB,mBAChBc,WAAYT,aAAaU,QAAQ,iBAR3B,UAYY,OAXlBd,EADM,QAYCC,OAZD,gCAaGD,EAASE,OAbZ,wEAeH,CACLK,QAAS,CAAEkD,QAAS,eAAgBC,UAAU,KAhBtC,4CAAF,mDAAC,GAmBbG,OAAO,WAAD,4BAAE,WAAOC,GAAP,eAAArE,EAAA,sEACiBC,MACrB,iDACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUgE,GACrB/D,QAAS,CACP,eAAgB,mBAChBc,WAAYT,aAAaU,QAAQ,iBARjC,cACAd,EADA,gBAYOA,EAASE,OAZhB,mFAAF,mDAAC,KCkBM6D,MAlDf,SAAoBC,GAAQ,IAClB7D,EAAS6D,EAAT7D,KADiB,EAEKiB,oBAAS,GAFd,mBAElB6C,EAFkB,KAETC,EAFS,OAGK9C,mBAAS,MAHd,mBAGT+C,GAHS,WAInBC,EAAUC,cACVC,EAAcvC,qBAAWd,GA0B/B,OACE,sBAAKgC,UAAU,iBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAKsB,IAAKpE,MAEZ,qBAAK8C,UAAU,UAAf,SACE,eAACuB,EAAA,EAAD,CAAQjC,MAAM,UAAUM,QA7Bd,WACVyB,EAAY9D,iBAAiB0D,GAAW,GAC5C,IAAMN,EAAW,CACfE,IAAK3D,GAEPsE,EAAiBd,aAAaC,GAAUjC,MAAK,SAACxB,GAAU,IAC9CI,EAAYJ,EAAZI,QACHA,EAAQmD,SAIkB,iBAApBnD,EAAQkD,SACjBU,EAAW5D,GACX+D,EAAYjD,QAAQ,CAAEZ,SAAU,GAAIC,KAAM,KAC1C4D,EAAYhD,oBAAmB,IAE/B6C,EAAW5D,GARXkE,EAAiBjB,cAAc7B,MAAK,SAAC+C,GACnCP,EAAW5D,MASf2D,GAAW,MAERI,EAAY9D,iBAAiB4D,EAAQO,KAAK,qBAS3C,4BAEGV,EACC,cAACW,EAAA,EAAD,CAASrC,MAAM,QAAQsC,KAAK,KAAKzB,MAAO,CAAE0B,WAAY,MAEtD,Y,iCCnBGC,MA1Bf,SAAqBf,GAGnB,IAH2B,IACnBgB,EAAmChB,EAAnCgB,MAAOC,EAA4BjB,EAA5BiB,WAAYC,EAAgBlB,EAAhBkB,YACrBC,EAAiB,GACdC,EAAI,EAAGA,GAAKC,KAAKC,KAAKN,EAAQE,GAAcE,IACnDD,EAAeR,KAAKS,GAKtB,OACE,qBAAKnC,UAAU,aAAf,SACE,cAACsC,EAAA,EAAD,UACGJ,EAAeK,KAAI,SAACC,GACnB,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAgBxC,KAAK,IAAIN,QAAS,kBAT9B,SAAC4C,GACfR,EAAWQ,GAQuC5C,CAAQ4C,IAAhD,SACGA,cCkCFG,MAlDf,WAAsB,IAAD,EACOxE,mBAAS,IADhB,mBACZyE,EADY,KACLC,EADK,OAEW1E,oBAAS,GAFpB,mBAEZ2E,EAFY,KAEHC,EAFG,OAImB5E,mBAAS,IAJ5B,mBAIZ8D,EAJY,aAKmB9D,mBAAS,IAL5B,mBAKZ6E,EALY,KAKCC,EALD,KAMbC,EAAkBjB,EAAce,EAChCG,EAAmBD,EAAkBjB,EAE3CzD,qBAAU,YACK,uCAAG,8BAAAhC,EAAA,6DACduG,GAAW,GADG,SAEStG,MAAM,wFAAD,OATlB,KAOI,cAERM,EAFQ,gBAKIA,EAASE,OALb,OAKRmG,EALQ,OAMdL,GAAW,GACXF,EAASO,EAAIlG,MAPC,2CAAH,qDASbuE,KACC,IACH,IAAM4B,EAAcT,EAAMU,MAAMH,EAAkBD,GAKlD,OACE,qBAAKlD,UAAU,YAAf,SACG8C,EACC,yCAEA,qCACE,qBAAK9C,UAAU,YAAf,SACGqD,EAAYd,KAAI,SAACgB,GAChB,OACE,cAAC,EAAD,CAA0BrG,KAAMqG,EAAKC,OAAOC,SAAS5C,KAApC0C,EAAKG,SAI5B,cAAC,EAAD,CACE3B,MArCI,GAsCJC,WAlBS,SAACQ,GAClBS,EAAeT,IAkBPP,YAAaA,U,MCjCV0B,MATf,WACE,OACE,sBAAK3D,UAAU,YAAf,UACE,oDACA,cAAC,EAAD,Q,6DCUS4D,MAff,SAAiB7C,GAQf,OACE,qBAAKf,UARU,SAACe,GAChB,IAAI8C,EAAY,SAIhB,OAHI9C,EAAMzD,QAAQmD,SAChBoD,GAAwB,eACnBA,GAAwB,gBACxBA,EAGSC,CAAS/C,GAAQtD,KAAK,QAAtC,SACGsD,EAAMzD,QAAQkD,W,uBCmGNuD,MA/Ff,WAAkB,IAAD,EACS5F,mBAAS,CAC/BX,SAAU,GACVwG,SAAU,KAHG,mBACRzH,EADQ,KACF6B,EADE,OAKeD,oBAAS,GALxB,mBAKR6C,EALQ,KAKCC,EALD,OAMe9C,mBAAS,MANxB,mBAMRb,EANQ,KAMC4D,EAND,OAOqB/C,mBAAS,IAP9B,mBAOR8F,EAPQ,KAOIC,EAPJ,KAQTC,EAAW,SAACC,GAChBhG,EAAQ,2BAAK7B,GAAN,kBAAa6H,EAAEC,OAAOC,KAAOF,EAAEC,OAAOzF,UAEzCyC,EAAcvC,qBAAWd,GACzBmD,EAAUC,cAoBVmD,EAAgB,WACpB,IAAMC,EAAM,GAQZ,OAPIC,IAAQlI,EAAKiB,YACfgH,EAAIhH,SAAW,wBAEbiH,IAAQlI,EAAKyH,YACfQ,EAAIR,SAAW,wBAEjBE,EAAcM,KACVE,OAAOC,KAAKH,GAAKI,OAAS,IAI1BC,IAAYZ,EAAWzG,SACvBsH,IAAgBb,EAAWD,SACjC,OACE,qBAAKhE,UAAU,mBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIG,MAAO,CAAE4E,aAAc,IAA3B,mBACA,eAACC,EAAA,EAAD,CAAMC,SAtCK,SAACb,GAChBA,EAAEc,iBACGX,MAEHtD,GAAW,GACXxC,EAAYnC,MAAMC,GAAMmC,MAAK,SAACxB,GAAU,IAC9BK,EAAmCL,EAAnCK,gBAAiBhB,EAAkBW,EAAlBX,KAAMe,EAAYJ,EAAZI,QAC/B2D,GAAW,GACP1D,GACF8D,EAAYjD,QAAQ7B,GACpB8E,EAAYhD,mBAAmBd,GAC/B4D,EAAQO,KAAK,eAEbR,EAAW5D,EAAQkD,cAyBrB,UACE,eAAC2E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,sBACA,cAACC,EAAA,EAAD,CACEC,KAAK,OACLjB,KAAK,WACLZ,GAAG,eACH8B,YAAY,WACZrB,SAAUA,EACVsB,QAASZ,IAEX,cAACa,EAAA,EAAD,UAAezB,EAAWzG,cAE5B,eAAC2H,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,sBACA,cAACC,EAAA,EAAD,CACEC,KAAK,WACLjB,KAAK,WACLZ,GAAG,kBACH8B,YAAY,WACZrB,SAAUA,EACVsB,QAASX,IAEX,cAACY,EAAA,EAAD,UAAezB,EAAWD,cAE5B,eAACzC,EAAA,EAAD,CAAQjC,MAAM,UAAUa,MAAO,CAAEwF,UAAW,IAA5C,kBAEG3E,EACC,cAACW,EAAA,EAAD,CACErC,MAAM,QACNsC,KAAK,KACLzB,MAAO,CAAE0B,WAAY,MAGvB,MAGHvE,EAAU,cAAC,EAAD,CAASA,QAASA,IAAc,c,uBCsDtCsI,MA/If,WAAqB,IAAD,EACMzH,mBAAS,CAC/BX,SAAU,GACVwG,SAAU,GACV6B,gBAAiB,GACjBpI,KAAM,KALU,mBACXlB,EADW,KACL6B,EADK,OAOYD,mBAAS,MAPrB,mBAOXb,EAPW,KAOF4D,EAPE,OAQY/C,oBAAS,GARrB,mBAQX6C,EARW,KAQFC,EARE,OASkB9C,mBAAS,IAT3B,mBASX8F,EATW,KASCC,EATD,KAUd4B,EAAUC,iBAAO,MACf5E,EAAUC,cAChB5C,qBAAU,WACR,OAAO,WACLwH,aAAaF,MAEd,IAEH,IAAM3B,EAAW,SAACC,GAChBhG,EAAQ,2BAAK7B,GAAN,kBAAa6H,EAAEC,OAAOC,KAAOF,EAAEC,OAAOzF,UAiCzCqH,EAAgB,WACpB,IAAMzB,EAAM,GAQZ,OAPI0B,IAAWzB,QAAQlI,EAAKiB,YAC1BgH,EAAIhH,SAAW,wBACb0I,IAAWzB,QAAQlI,EAAKyH,YAC1BQ,EAAIR,SAAW,wBACZkC,IAAWC,OAAO5J,EAAKyH,SAAUzH,EAAKsJ,mBACzCrB,EAAIqB,gBAAkB,gCACxB3B,EAAcM,KACVE,OAAOC,KAAKH,GAAKI,OAAS,IAK1BwB,IAAgBnC,EAAWzG,SAC3BsH,IAAgBb,EAAWD,SAC3BqC,IAAepC,EAAW4B,gBAChC,OACE,qBAAK7F,UAAU,mBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,oBAAIG,MAAO,CAAE4E,aAAc,IAA3B,sBACA,eAACC,EAAA,EAAD,CAAMC,SA/CK,SAACb,GAEhB,GADAA,EAAEc,iBACGe,IAAL,CAEE,IAAMK,EAAa,CACjB9I,SAAUjB,EAAKiB,SACfwG,SAAUzH,EAAKyH,SACfvG,KAAMlB,EAAKkB,MAEbwD,GAAW,GACXxC,EAAYf,SAAS4I,GAAY5H,MAAK,SAACxB,GAAU,IACvCI,EAAYJ,EAAZI,QACR4D,EAAW5D,GAffc,EAAQ,CAAEZ,SAAU,GAAIwG,SAAU,GAAI6B,gBAAiB,GAAIpI,KAAM,KAiBxDH,EAAQmD,WACXQ,GAAW,GACX6E,EAAUS,YAAW,WACnBpF,EAAQO,KAAK,sBACZ,MAELT,GAAW,QA2BX,UACE,eAACkE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,kBACA,cAACC,EAAA,EAAD,CACEC,KAAK,OACLjB,KAAK,WACLZ,GAAG,eACH9E,MAAOrC,EAAKiB,SACZgI,YAAY,WACZrB,SAAUA,EACVsB,QAASW,IAEX,cAACV,EAAA,EAAD,UAAezB,EAAWzG,cAE5B,eAAC2H,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,sBACA,cAACC,EAAA,EAAD,CACEC,KAAK,WACLjB,KAAK,WACLZ,GAAG,kBACH9E,MAAOrC,EAAKyH,SACZwB,YAAY,WACZrB,SAAUA,EACVsB,QAASX,IAEX,cAACY,EAAA,EAAD,UAAezB,EAAWD,cAE5B,eAACmB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,sBACA,cAACC,EAAA,EAAD,CACEC,KAAK,WACLjB,KAAK,kBACLZ,GAAG,kBACH9E,MAAOrC,EAAKsJ,gBACZL,YAAY,mBACZrB,SAAUA,EACVsB,QAASY,IAEX,cAACX,EAAA,EAAD,UAAezB,EAAW4B,qBAE5B,eAACV,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,cAAX,kBACA,cAACC,EAAA,EAAD,CACEC,KAAK,OACLjB,KAAK,OACLZ,GAAG,cACH9E,MAAOrC,EAAKkB,KACZ+H,YAAY,oBACZrB,SAAUA,OAGd,eAAC5C,EAAA,EAAD,CAAQjC,MAAM,UAAUa,MAAO,CAAEwF,UAAW,GAAIZ,aAAc,IAA9D,qBAEG/D,EACC,cAACW,EAAA,EAAD,CACErC,MAAM,QACNsC,KAAK,KACLzB,MAAO,CAAE0B,WAAY,MAGvB,MAGHvE,EAAU,cAAC,EAAD,CAASA,QAASA,IAAc,cC3GtCkJ,MAzCf,SAAmBzF,GAAQ,IACjB0F,EAAyB1F,EAAzB0F,aAAcC,EAAW3F,EAAX2F,OADE,EAEMvI,mBAAS,MAFf,mBAER+C,GAFQ,aAGM/C,oBAAS,GAHf,mBAGjB6C,EAHiB,KAGRC,EAHQ,KAIlBJ,EAAM4F,EAAa5F,IAczB,OACE,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAKsB,IAAKT,MAEZ,qBAAKb,UAAU,aAAf,SACE,eAACuB,EAAA,EAAD,CAAQjC,MAAM,SAASM,QAnBP,WACpB,IAAM+G,EAAY,CAChB9F,IAAKA,GAEPI,GAAW,GACX2F,EAAkBhG,OAAO+F,GAAWjI,MAAK,SAACxB,GAAU,IAC1CI,EAAYJ,EAAZI,QACJA,EAAQmD,UACVS,EAAW5D,EAAQmD,UAErBiG,EAAO7F,OASL,mBAEGG,EACC,cAACW,EAAA,EAAD,CACErC,MAAM,QACNsC,KAAK,KACLzB,MAAO,CAAE0B,WAAY,MAGvB,Y,OCDGgF,MA/Bf,WAAkB,IAAD,EACmB1I,mBAAS,IAD5B,mBACR2I,EADQ,KACGC,EADH,OAEa5I,oBAAS,GAFtB,mBAERuI,EAFQ,KAEAM,EAFA,KAGfxI,qBAAU,WACRgD,EAAiBjB,cAAc7B,MAAK,SAACxB,GACnC6J,EAAa7J,EAAK4J,gBAEnB,CAACJ,IACJ,IAAMO,EAAW,WACfD,GAAWN,IAEb,OACE,gCACE,oBAAIvG,MAAO,CAAE4E,aAAc,GAAImC,UAAW,SAAUvB,UAAW,IAA/D,gCAGA,qBAAK3F,UAAU,qBAAf,SACG8G,EAAUvE,KAAI,SAAC5B,GACd,OACE,cAACwG,EAAD,CAEEV,aAAc9F,EACd+F,OAAQO,GAFHtG,EAASyG,cCfbC,MAPf,WACE,OACE,8BACE,+C,QCqBSC,MAvBf,YAAiE,IAA9BC,EAA6B,EAAxCC,UAAsBC,EAAkB,EAAlBA,MAAUC,EAAQ,uCAC5B5I,qBAAWd,GAArCT,EADsD,EACtDA,gBAAiBhB,EADqC,EACrCA,KACzB,OACE,cAAC,IAAD,2BACMmL,GADN,IAEEhB,OAAQ,SAAC3F,GACP,OAAKxD,EAOAkK,EAAME,SAASpL,EAAKkB,MAIlB,cAAC8J,EAAD,eAAexG,IAFlB,cAAC,IAAD,CAAUtB,GAAI,CAAEmI,SAAU,IAAKC,MAAO,CAAEC,KAAM/G,EAAMgH,aAPpD,cAAC,IAAD,CACEtI,GAAI,CAAEmI,SAAU,SAAUC,MAAO,CAAEC,KAAM/G,EAAMgH,kBCQ9CC,MAjBf,YAA4D,IAAvBT,EAAsB,EAAjCC,UAAyBE,EAAQ,6BACjDnK,EAAoBuB,qBAAWd,GAA/BT,gBACR,OACE,cAAC,IAAD,2BACMmK,GADN,IAEEhB,OAAQ,SAAC3F,GACP,OAAIxD,EAEA,cAAC,IAAD,CAAUkC,GAAI,CAAEmI,SAAU,IAAKC,MAAO,CAAEC,KAAM/G,EAAMgH,aAGjD,cAACR,EAAD,eAAexG,SCmBfkH,OAvBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,sBAAKjI,UAAU,YAAf,UACE,cAAC,IAAD,CAAOkI,OAAK,EAACC,KAAK,aAAaX,UAAW7D,IAC1C,cAAC,IAAD,CAAOwE,KAAK,mBAAmBX,UAAWzD,IAC1C,cAAC,EAAD,CAAgBoE,KAAK,sBAAsBX,UAAW5B,IACtD,cAAC,EAAD,CACEuC,KAAK,uBACLV,MAAO,CAAC,OAAQ,SAChBD,UAAWX,IAEb,cAAC,EAAD,CACEsB,KAAK,mBACLV,MAAO,CAAC,SACRD,UAAWH,W,OCrBrBe,IAAS1B,OACP,cAAC,EAAD,UACE,cAAC,IAAM2B,WAAP,UACE,cAAC,GAAD,QAIJC,SAASC,eAAe,U","file":"static/js/main.635e838a.chunk.js","sourcesContent":["import Cookie from \"js-cookie\";\r\nexport default {\r\n  login: async (user) => {\r\n    const response = await fetch(\r\n      \"https://server-giphy.herokuapp.com/user/login\",\r\n      {\r\n        method: \"post\",\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    if (response.status !== 401) {\r\n      const data = await response.json();\r\n      localStorage.setItem(\"auth_token\", data.token);\r\n      return data;\r\n    } else {\r\n      const message = {\r\n        isAuthenticated: false,\r\n        user: {\r\n          username: \"\",\r\n          role: \"\",\r\n        },\r\n      };\r\n      return message;\r\n    }\r\n  },\r\n  register: async (user) => {\r\n    const response = await fetch(\r\n      \"https://server-giphy.herokuapp.com/user/register\",\r\n      {\r\n        method: \"post\",\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return await response.json();\r\n  },\r\n  logout: async () => {\r\n    const response = await fetch(\r\n      \"https://server-giphy.herokuapp.com/user/logout\",\r\n      {\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          auth_token: localStorage.getItem(\"auth_token\"),\r\n        },\r\n      }\r\n    );\r\n    return await response.json();\r\n  },\r\n  isAuthenticated: async () => {\r\n    const response = await fetch(\r\n      \"https://server-giphy.herokuapp.com/user/authenticated\",\r\n      {\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          auth_token: localStorage.getItem(\"auth_token\"),\r\n        },\r\n      }\r\n    );\r\n    if (response.status !== 401) {\r\n      console.log(response.status);\r\n      //passport middleware auto send status 401 when authenticated\r\n      return await response.json();\r\n    } else return { isAuthenticated: false, user: { username: \"\", role: \"\" } };\r\n  },\r\n};\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport AuthService from \"../Services/AuthServices\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoader, setIsLoader] = useState(false);\r\n  useEffect(() => {\r\n    AuthService.isAuthenticated().then((data) => {\r\n      setUser(data.user);\r\n      setIsAuthenticated(data.isAuthenticated);\r\n      setIsLoader(true);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {!isLoader ? (\r\n        <h1>Loading</h1>\r\n      ) : (\r\n        <AuthContext.Provider\r\n          value={{ user, setUser, isAuthenticated, setIsAuthenticated }}\r\n        >\r\n          {children}\r\n        </AuthContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\nimport AuthServices from \"../../Services/AuthServices\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  NavItem,\r\n} from \"reactstrap\";\r\nfunction ShowNavBar() {\r\n  const { user, setUser, isAuthenticated, setIsAuthenticated } = useContext(\r\n    AuthContext\r\n  );\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const handleLogout = () => {\r\n    AuthServices.logout().then((data) => {\r\n      if (data.success) {\r\n        console.log(\"remove\");\r\n        localStorage.removeItem(\"auth_token\");\r\n        setUser(data.user);\r\n        setIsAuthenticated(false);\r\n      }\r\n    });\r\n  };\r\n  const Authenticated = () => {\r\n    return (\r\n      <>\r\n        <NavItem>\r\n          <Link to=\"/Giphy-app\">Home</Link>\r\n        </NavItem>\r\n        <NavItem>\r\n          <Link to=\"/Giphy-app/favorites\">Favorites</Link>\r\n        </NavItem>\r\n        {user.role === \"admin\" ? (\r\n          <NavItem>\r\n            <Link to=\"/Giphy-app/admin\">Admin</Link>\r\n          </NavItem>\r\n        ) : null}\r\n        <NavItem>\r\n          <a\r\n            href=\" # \"\r\n            onClick={handleLogout}\r\n            style={{ cursor: \"pointer\", position: \"absolute\", right: 20 }}\r\n          >\r\n            Logout\r\n          </a>\r\n        </NavItem>\r\n      </>\r\n    );\r\n  };\r\n  const unAuthenticated = () => {\r\n    return (\r\n      <>\r\n        <NavItem>\r\n          <Link to=\"/Giphy-app\">Home</Link>\r\n        </NavItem>\r\n        <NavItem>\r\n          <Link to=\"/Giphy-app/login\">Login</Link>\r\n        </NavItem>\r\n        <NavItem>\r\n          <Link to=\"/Giphy-app/register\">Register</Link>\r\n        </NavItem>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <Link to=\"/Giphy-app\">\r\n          <NavbarBrand>Logo</NavbarBrand>\r\n        </Link>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {!isAuthenticated ? unAuthenticated() : Authenticated()}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowNavBar;\r\n","export default {\r\n  getFavorite: async () => {\r\n    const response = await fetch(\r\n      \"https://server-giphy.herokuapp.com/user/favorites\",\r\n      {\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          auth_token: localStorage.getItem(\"auth_token\"),\r\n        },\r\n      }\r\n    );\r\n    if (response.status !== 401) {\r\n      return await response.json();\r\n    } else\r\n      return {\r\n        message: { msgBody: \"UnAuthorized\", msgError: true },\r\n      };\r\n  },\r\n  postFavorite: async (favorite) => {\r\n    const response = await fetch(\r\n      \"https://server-giphy.herokuapp.com/user/favorite\",\r\n      {\r\n        method: \"post\",\r\n        body: JSON.stringify(favorite),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          auth_token: localStorage.getItem(\"auth_token\"),\r\n        },\r\n      }\r\n    );\r\n    if (response.status !== 401) {\r\n      return await response.json();\r\n    } else\r\n      return {\r\n        message: { msgBody: \"UnAuthorized\", msgError: true },\r\n      };\r\n  },\r\n  delete: async (url) => {\r\n    const response = await fetch(\r\n      \"https://server-giphy.herokuapp.com/user/delete\",\r\n      {\r\n        method: \"post\",\r\n        body: JSON.stringify(url),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          auth_token: localStorage.getItem(\"auth_token\"),\r\n        },\r\n      }\r\n    );\r\n    return await response.json();\r\n  },\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Spinner } from \"reactstrap\";\r\nimport \"./GiphyItems.css\";\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\nimport FavoritesService from \"../../Services/FavoriteService\";\r\nfunction GiphyItems(props) {\r\n  const { data } = props;\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const history = useHistory();\r\n  const authContext = useContext(AuthContext);\r\n\r\n  // add to favotites\r\n  const onClick = () => {\r\n    if (authContext.isAuthenticated) setSpinner(true);\r\n    const favorite = {\r\n      url: data,\r\n    };\r\n    FavoritesService.postFavorite(favorite).then((data) => {\r\n      const { message } = data;\r\n      if (!message.msgError) {\r\n        FavoritesService.getFavorite().then((getData) => {\r\n          setMessage(message);\r\n        });\r\n      } else if (message.msgBody === \"UnAuthorzied\") {\r\n        setMessage(message);\r\n        authContext.setUser({ username: \"\", role: \"\" });\r\n        authContext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n      setSpinner(false);\r\n    });\r\n    if (!authContext.isAuthenticated) history.push(\"/Giphy-app/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"img-box\">\r\n        <img src={data}></img>\r\n      </div>\r\n      <div className=\"btn-add\">\r\n        <Button color=\"primary\" onClick={onClick}>\r\n          Add to favorite\r\n          {spinner ? (\r\n            <Spinner color=\"light\" size=\"sm\" style={{ marginLeft: 10 }} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GiphyItems;\r\n","import React from \"react\";\r\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\r\nimport \"./Pagination.css\";\r\nfunction Paginations(props) {\r\n  const { total, changePage, itemPerPage } = props;\r\n  const listPagination = [];\r\n  for (let i = 1; i <= Math.ceil(total / itemPerPage); i++)\r\n    listPagination.push(i);\r\n\r\n  const onClick = (number) => {\r\n    changePage(number);\r\n  };\r\n  return (\r\n    <div className=\"pagination\">\r\n      <Pagination>\r\n        {listPagination.map((number) => {\r\n          return (\r\n            <PaginationItem>\r\n              <PaginationLink href=\"#\" onClick={() => onClick(number)}>\r\n                {number}\r\n              </PaginationLink>\r\n            </PaginationItem>\r\n          );\r\n        })}\r\n      </Pagination>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Paginations;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport GiphyItems from \"./GiphyItems\";\r\nimport Pagination from \"../Paginations/Paginations\";\r\nfunction ListGiphy() {\r\n  const [giphy, setGiphy] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const total = 50;\r\n  const [itemPerPage, setItemPerPage] = useState(15);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const indexOfLastItem = itemPerPage * currentPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemPerPage;\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      setLoading(true);\r\n      const response = await fetch(\r\n        `http://api.giphy.com/v1/gifs/trending?api_key=JjiRVm3bXZXAkfwAccSJB7bGELIXtT11&limit=${total}`\r\n      );\r\n      const res = await response.json();\r\n      setLoading(false);\r\n      setGiphy(res.data);\r\n    };\r\n    getData();\r\n  }, []);\r\n  const currentList = giphy.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const changePage = (number) => {\r\n    setCurrentPage(number);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      {loading ? (\r\n        <h1>Loading</h1>\r\n      ) : (\r\n        <>\r\n          <div className=\"ListItems\">\r\n            {currentList.map((item) => {\r\n              return (\r\n                <GiphyItems key={item.id} data={item.images.original.url} />\r\n              );\r\n            })}\r\n          </div>\r\n          <Pagination\r\n            total={total}\r\n            changePage={changePage}\r\n            itemPerPage={itemPerPage}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListGiphy;\r\n","import React from \"react\";\r\nimport ListGiphy from \"../ListGiphy/ListGiphy\";\r\nimport \"./Home.css\";\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home-page\">\r\n      <h1>Top Trending Giphy</h1>\r\n      <ListGiphy />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction Message(props) {\r\n  const getStyle = (props) => {\r\n    let baseClass = \"alert \";\r\n    if (props.message.msgError) {\r\n      baseClass = baseClass + \"alert-danger\";\r\n    } else baseClass = baseClass + \"alert-primary\";\r\n    return baseClass;\r\n  };\r\n  return (\r\n    <div className={getStyle(props)} role=\"alert\">\r\n      {props.message.msgBody}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport AuthService from \"../../Services/AuthServices\";\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Message from \"../Message/Message\";\r\nimport isEmpty from \"validator/lib/isEmpty\";\r\nimport \"./Login.css\";\r\nfunction Login() {\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [validation, setValidation] = useState(\"\");\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  const authContext = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validationAll()) return;\r\n    else {\r\n      setSpinner(true);\r\n      AuthService.login(user).then((data) => {\r\n        const { isAuthenticated, user, message } = data;\r\n        setSpinner(false);\r\n        if (isAuthenticated) {\r\n          authContext.setUser(user);\r\n          authContext.setIsAuthenticated(isAuthenticated);\r\n          history.push(\"/Giphy-app\");\r\n        } else {\r\n          setMessage(message.msgBody);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  // validation\r\n  const validationAll = () => {\r\n    const msg = {};\r\n    if (isEmpty(user.username)) {\r\n      msg.username = \"username is required\";\r\n    }\r\n    if (isEmpty(user.password)) {\r\n      msg.password = \"password is required\";\r\n    }\r\n    setValidation(msg);\r\n    if (Object.keys(msg).length > 0) return false;\r\n\r\n    return true;\r\n  };\r\n  const userError = validation.username ? true : false;\r\n  const passwordError = validation.password ? true : false;\r\n  return (\r\n    <div className=\"container-detail\">\r\n      <div className=\"login-container\">\r\n        <h1 style={{ marginBottom: 20 }}>Login</h1>\r\n        <Form onSubmit={onSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"exampleEmail\">Username</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"exampleEmail\"\r\n              placeholder=\"username\"\r\n              onChange={onChange}\r\n              invalid={userError}\r\n            />\r\n            <FormFeedback>{validation.username}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword\"\r\n              placeholder=\"password\"\r\n              onChange={onChange}\r\n              invalid={passwordError}\r\n            />\r\n            <FormFeedback>{validation.password}</FormFeedback>\r\n          </FormGroup>\r\n          <Button color=\"primary\" style={{ marginTop: 20 }}>\r\n            Login\r\n            {spinner ? (\r\n              <Spinner\r\n                color=\"light\"\r\n                size=\"sm\"\r\n                style={{ marginLeft: 10 }}\r\n              ></Spinner>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Button>\r\n          {message ? <Message message={message} /> : null}\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport AuthService from \"../../Services/AuthServices\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Message from \"../Message/Message\";\r\nimport Validation from \"validator\";\r\nimport \"./Register.css\";\r\nfunction Register() {\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    role: \"\",\r\n  });\r\n  const [message, setMessage] = useState(null);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [validation, setValidation] = useState(\"\");\r\n  let timerID = useRef(null);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timerID);\r\n    };\r\n  }, []);\r\n\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setUser({ username: \"\", password: \"\", confirmPassword: \"\", role: \"\" });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!ValidationAll()) return;\r\n    else {\r\n      const userSubmit = {\r\n        username: user.username,\r\n        password: user.password,\r\n        role: user.role,\r\n      };\r\n      setSpinner(true);\r\n      AuthService.register(userSubmit).then((data) => {\r\n        const { message } = data;\r\n        setMessage(message);\r\n        resetForm();\r\n        if (!message.msgError) {\r\n          setSpinner(false);\r\n          timerID = setTimeout(() => {\r\n            history.push(\"/Giphy-app/login\");\r\n          }, 2000);\r\n        }\r\n        setSpinner(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  // Validation\r\n  const ValidationAll = () => {\r\n    const msg = {};\r\n    if (Validation.isEmpty(user.username))\r\n      msg.username = \"username is required\";\r\n    if (Validation.isEmpty(user.password))\r\n      msg.password = \"password is required\";\r\n    if (!Validation.equals(user.password, user.confirmPassword))\r\n      msg.confirmPassword = \"confirm password is not true\";\r\n    setValidation(msg);\r\n    if (Object.keys(msg).length > 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const usernameError = validation.username ? true : false;\r\n  const passwordError = validation.password ? true : false;\r\n  const confirmError = validation.confirmPassword ? true : false;\r\n  return (\r\n    <div className=\"container-detail\">\r\n      <div className=\"register-container\">\r\n        <h1 style={{ marginBottom: 20 }}>Register</h1>\r\n        <Form onSubmit={onSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"exampleEmail\">User</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"exampleEmail\"\r\n              value={user.username}\r\n              placeholder=\"username\"\r\n              onChange={onChange}\r\n              invalid={usernameError}\r\n            />\r\n            <FormFeedback>{validation.username}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword\"\r\n              value={user.password}\r\n              placeholder=\"password\"\r\n              onChange={onChange}\r\n              invalid={passwordError}\r\n            />\r\n            <FormFeedback>{validation.password}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"confirmPassword\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              id=\"confirmPassword\"\r\n              value={user.confirmPassword}\r\n              placeholder=\"confirm password\"\r\n              onChange={onChange}\r\n              invalid={confirmError}\r\n            />\r\n            <FormFeedback>{validation.confirmPassword}</FormFeedback>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"exampleRole\">Role</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"role\"\r\n              id=\"exampleRole\"\r\n              value={user.role}\r\n              placeholder=\"Role (admin/user)\"\r\n              onChange={onChange}\r\n            />\r\n          </FormGroup>\r\n          <Button color=\"primary\" style={{ marginTop: 20, marginBottom: 20 }}>\r\n            Register\r\n            {spinner ? (\r\n              <Spinner\r\n                color=\"light\"\r\n                size=\"sm\"\r\n                style={{ marginLeft: 10 }}\r\n              ></Spinner>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Button>\r\n          {message ? <Message message={message} /> : null}\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Spinner } from \"reactstrap\";\r\nimport FavoritesServices from \"../../Services/FavoriteService\";\r\nfunction TodoItems(props) {\r\n  const { listfavorite, render } = props;\r\n  const [message, setMessage] = useState(null);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const url = listfavorite.url;\r\n  const handleOnClick = () => {\r\n    const deleteUrl = {\r\n      url: url,\r\n    };\r\n    setSpinner(true);\r\n    FavoritesServices.delete(deleteUrl).then((data) => {\r\n      const { message } = data;\r\n      if (message.msgError) {\r\n        setMessage(message.msgError);\r\n      }\r\n      render(url);\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"img-box\">\r\n        <img src={url}></img>\r\n      </div>\r\n      <div className=\"btn-delete\">\r\n        <Button color=\"danger\" onClick={handleOnClick}>\r\n          Delete\r\n          {spinner ? (\r\n            <Spinner\r\n              color=\"light\"\r\n              size=\"sm\"\r\n              style={{ marginLeft: 10 }}\r\n            ></Spinner>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoItems;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FavoriteItems from \"./FavoriteItems\";\r\nimport FavoritesService from \"../../Services/FavoriteService\";\r\nimport \"./Favorites.css\";\r\nfunction Todos() {\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [render, setRender] = useState(false);\r\n  useEffect(() => {\r\n    FavoritesService.getFavorite().then((data) => {\r\n      setFavorites(data.favorites);\r\n    });\r\n  }, [render]);\r\n  const isRender = () => {\r\n    setRender(!render);\r\n  };\r\n  return (\r\n    <div>\r\n      <h1 style={{ marginBottom: 30, textAlign: \"center\", marginTop: 20 }}>\r\n        Your favorite list\r\n      </h1>\r\n      <div className=\"favorite-container\">\r\n        {favorites.map((favorite) => {\r\n          return (\r\n            <FavoriteItems\r\n              key={favorite._id}\r\n              listfavorite={favorite}\r\n              render={isRender}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","import React from \"react\";\r\n\r\nfunction Admin() {\r\n  return (\r\n    <div>\r\n      <h1>Admin Page</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default Admin;\r\n","import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nfunction PrivateRoute({ component: Component, roles, ...rest }) {\r\n  const { isAuthenticated, user } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!isAuthenticated) {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        }\r\n        if (!roles.includes(user.role))\r\n          return (\r\n            <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n          );\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nfunction UnPrivateRoute({ component: Component, ...rest }) {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isAuthenticated) {\r\n          return (\r\n            <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n          );\r\n        }\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default UnPrivateRoute;\r\n","import React, { useContext } from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport Todos from \"./components/Todos/Favorites\";\nimport Admin from \"./Admin/Admin\";\nimport PrivateRoute from \"./hocs/PrivateRoute\";\nimport UnPrivateRoute from \"./hocs/UnPrivateRoute\";\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <div className=\"container\">\n        <Route exact path=\"/Giphy-app\" component={Home} />\n        <Route path=\"/Giphy-app/login\" component={Login} />\n        <UnPrivateRoute path=\"/Giphy-app/register\" component={Register} />\n        <PrivateRoute\n          path=\"/Giphy-app/favorites\"\n          roles={[\"user\", \"admin\"]}\n          component={Todos}\n        />\n        <PrivateRoute\n          path=\"/Giphy-app/admin\"\n          roles={[\"admin\"]}\n          component={Admin}\n        />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport AuthProvider from \"./Context/AuthContext\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <AuthProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </AuthProvider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}